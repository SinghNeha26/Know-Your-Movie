{"version":3,"sources":["components/MovieComponent.js","components/MovieInfoComponent.js","App.js","index.js"],"names":["MovieContainer","styled","div","CoverImage","img","MovieName","span","InfoColumn","MovieInfo","MovieComponent","props","movie","Title","Year","imdbID","Type","Poster","onClick","onMovieSelect","window","scrollTo","top","behavior","src","alt","Container","Close","MovieInfoComponent","selectedMovie","useState","movieInfo","setMovieInfo","useEffect","axios","get","API_KEY","then","response","data","imdbRating","Language","Rated","Released","Runtime","Genre","Director","Actors","Plot","Header","AppName","MovieImage","SearchBox","MovieListContainer","SearchIcon","SearchInput","input","Placeholder","App","searchQuery","updateSearchQuery","movieList","updateMovieList","timeoutId","updateTimeoutId","fetchData","searchString","a","Search","placeholder","value","onChange","event","clearTimeout","target","timeout","setTimeout","length","map","index","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iSAGMA,EAAiBC,IAAOC,IAAV,iKAQdC,EAAaF,IAAOG,IAAV,oEAIVC,EAAYJ,IAAOK,KAAV,iLASTC,EAAaN,IAAOC,IAAV,yGAKVM,EAAYP,IAAOK,KAAV,gLA2BAG,EAlBQ,SAACC,GACtB,MAA8CA,EAAMC,MAA5CC,EAAR,EAAQA,MAAOC,EAAf,EAAeA,KAAMC,EAArB,EAAqBA,OAAQC,EAA7B,EAA6BA,KAAMC,EAAnC,EAAmCA,OACnC,OACE,eAAChB,EAAD,CACEiB,QAAS,WACPP,EAAMQ,cAAcJ,GACpBK,OAAOC,SAAS,CAAEC,IAAK,EAAGC,SAAU,YAHxC,UAKE,cAACnB,EAAD,CAAYoB,IAAKP,EAAQQ,IAAKZ,IAC9B,cAACP,EAAD,UAAYO,IACZ,eAACL,EAAD,WACE,eAACC,EAAD,oBAAkBK,KAClB,eAACL,EAAD,oBAAkBO,Y,gBC7CpBU,EAAYxB,IAAOC,IAAV,sJAOTC,EAAaF,IAAOG,IAAV,oEAIVG,EAAaN,IAAOC,IAAV,yGAKVG,EAAYJ,IAAOK,KAAV,iLASTE,EAAYP,IAAOK,KAAV,gNAYToB,EAAQzB,IAAOK,KAAV,qNAmEIqB,EAxDY,SAACjB,GACxB,IAAQkB,EAAkBlB,EAAlBkB,cACR,EAAkCC,qBAAlC,mBAAOC,EAAP,KAAkBC,EAAlB,KAKA,OAJAC,qBAAU,WACNC,IAAMC,IAAN,qCAAwCN,EAAxC,mBAAgEO,IAC9DC,MAAK,SAACC,GAAD,OAAcN,EAAaM,EAASC,WAC5C,CAACV,IAEA,cAACH,EAAD,UACKK,EACG,qCACI,cAAC,EAAD,CAAYP,IAAG,OAAEO,QAAF,IAAEA,OAAF,EAAEA,EAAWd,OAA5B,kBACA,eAAC,EAAD,WACI,eAAC,EAAD,kBACKc,QADL,IACKA,OADL,EACKA,EAAWf,KADhB,YACwBe,QADxB,IACwBA,OADxB,EACwBA,EAAWlB,SAEnC,eAAC,EAAD,4BACkB,sCAAOkB,QAAP,IAAOA,OAAP,EAAOA,EAAWS,gBAEpC,eAAC,EAAD,oBACU,sCAAOT,QAAP,IAAOA,OAAP,EAAOA,EAAWjB,UAE5B,eAAC,EAAD,wBACc,sCAAOiB,QAAP,IAAOA,OAAP,EAAOA,EAAWU,cAEhC,eAAC,EAAD,qBACW,sCAAOV,QAAP,IAAOA,OAAP,EAAOA,EAAWW,WAE7B,eAAC,EAAD,wBACc,sCAAOX,QAAP,IAAOA,OAAP,EAAOA,EAAWY,cAEhC,eAAC,EAAD,uBACa,sCAAOZ,QAAP,IAAOA,OAAP,EAAOA,EAAWa,aAE/B,eAAC,EAAD,qBACW,sCAAOb,QAAP,IAAOA,OAAP,EAAOA,EAAWc,WAE7B,eAAC,EAAD,wBACc,sCAAOd,QAAP,IAAOA,OAAP,EAAOA,EAAWe,cAEhC,eAAC,EAAD,sBACY,sCAAOf,QAAP,IAAOA,OAAP,EAAOA,EAAWgB,YAE9B,eAAC,EAAD,oBACU,sCAAOhB,QAAP,IAAOA,OAAP,EAAOA,EAAWiB,aAGhC,cAACrB,EAAD,CAAOT,QAAS,kBAAMP,EAAMQ,iBAA5B,kBAGJ,gBChGHiB,EAAU,WACjBV,EAAYxB,IAAOC,IAAV,yEAIT8C,EAAS/C,IAAOC,IAAV,2QAYN+C,EAAUhD,IAAOC,IAAV,8FAKPgD,EAAajD,IAAOG,IAAV,6EAKV+C,GAAYlD,IAAOC,IAAV,4MAYTkD,GAAqBnD,IAAOC,IAAV,2JAQlBmD,GAAapD,IAAOG,IAAV,oFAKVkD,GAAcrD,IAAOsD,MAAV,gJAQXC,GAAcvD,IAAOG,IAAV,kGA+DFqD,OAzDf,WACE,MAAyC5B,mBAAS,IAAlD,mBAAO6B,EAAP,KAAoBC,EAApB,KACA,EAAqC9B,mBAAS,IAA9C,mBAAO+B,EAAP,KAAkBC,EAAlB,KACA,EAAuChC,qBAAvC,mBAAOD,EAAP,KAAsBV,EAAtB,KACA,EAAqCW,qBAArC,mBAAOiC,EAAP,KAAkBC,EAAlB,KAEMC,EAAS,uCAAG,WAAOC,GAAP,eAAAC,EAAA,sEACOjC,IAAMC,IAAN,qCAAwC+B,EAAxC,mBAA+D9B,IADtE,OACVE,EADU,OAGhBwB,EAAgBxB,EAASC,KAAK6B,QAHd,2CAAH,sDAYf,OACE,eAAC,EAAD,WACE,eAACnB,EAAD,WACE,eAACC,EAAD,WACE,cAACC,EAAD,CAAY3B,IAAI,oBADlB,qBAIA,eAAC4B,GAAD,WACE,cAACG,GAAD,CACEc,YAAY,eACZC,MAAOX,EACPY,SAlBW,SAACC,GACpBrD,EAAc,IACdsD,aAAaV,GACbH,EAAkBY,EAAME,OAAOJ,OAC/B,IAAMK,EAAUC,YAAW,kBAAMX,EAAUO,EAAME,OAAOJ,SAAQ,KAChEN,EAAgBW,MAcV,cAACrB,GAAD,CAAY9B,IAAI,2BAGnBK,GACC,cAAC,EAAD,CACEA,cAAeA,EACfV,cAAeA,IAGnB,cAACkC,GAAD,WACY,OAATQ,QAAS,IAATA,OAAA,EAAAA,EAAWgB,QAAUhB,EAAUiB,KAAI,SAAClE,EAAOmE,GAAR,OAClC,cAAC,EAAD,CAEEnE,MAAOA,EACPO,cAAeU,GAFVkD,MAMP,cAACtB,GAAD,CAAajC,IAAI,0BCpH3BwD,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,GAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.312c8ae1.chunk.js","sourcesContent":["import styled from \"styled-components\";\r\nimport React from \"react\";\r\n\r\nconst MovieContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  padding: 10px;\r\n  width: 280px\r\n  box-shadow: 0 3px 10px 0 #aaa;\r\n  cursor: pointer;\r\n`;\r\nconst CoverImage = styled.img`\r\n  height: 362px;\r\n  object-fit: cover;\r\n`;\r\nconst MovieName = styled.span`\r\n  font-size: 18px\r\n  font-weight: 600;\r\n  color: black;\r\n  margin: 15px 0;\r\n  white-space: nowrap;\r\n  text-overflow: ellipsis;\r\n  overflow: hidden;\r\n`;\r\nconst InfoColumn = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: space-between;\r\n`;\r\nconst MovieInfo = styled.span`\r\nfont-size: 16px;\r\nfont-weight: 500;\r\ncolor: black;\r\nwhite-space: nowrap;\r\noverflow: hidden;\r\ntext-transform: capitalize;\r\ntext-overflow: ellipsis;\r\n`;\r\nconst MovieComponent = (props) => {\r\n  const { Title, Year, imdbID, Type, Poster } = props.movie;\r\n  return (\r\n    <MovieContainer\r\n      onClick={() => {\r\n        props.onMovieSelect(imdbID);\r\n        window.scrollTo({ top: 0, behavior: \"smooth\" });\r\n      }}>\r\n      <CoverImage src={Poster} alt={Title} />\r\n      <MovieName>{Title}</MovieName>\r\n      <InfoColumn>\r\n        <MovieInfo>Year: {Year}</MovieInfo>\r\n        <MovieInfo>Type: {Type}</MovieInfo>\r\n      </InfoColumn>\r\n    </MovieContainer>\r\n  )\r\n};\r\n\r\nexport default MovieComponent;","import styled from \"styled-components\";\r\nimport React, { useState, useEffect } from 'react';\r\nimport axios from \"axios\";\r\nimport { API_KEY } from \"../App\";\r\n\r\nconst Container = styled.div`\r\ndisplay: flex;\r\nflex-direction: row;\r\npadding: 20px 30px;\r\njustify-content: centre;\r\nborder-bottom: 1px solid lightgray;\r\n`;\r\nconst CoverImage = styled.img`\r\n  height: 352px;\r\n  object-fit: cover;\r\n`;\r\nconst InfoColumn = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: space-between;\r\n`;\r\nconst MovieName = styled.span`\r\n  font-size: 18px\r\n  font-weight: 600;\r\n  color: black;\r\n  margin: 15px 0;\r\n  white-space: nowrap;\r\n  text-overflow: ellipsis;\r\n  overflow: hidden;\r\n`;\r\nconst MovieInfo = styled.span`\r\nfont-size: 16px;\r\nfont-weight: 500;\r\ncolor: black;\r\nwhite-space: nowrap;\r\noverflow: hidden;\r\ntext-transform: capitalize;\r\ntext-overflow: ellipsis;\r\n& span {\r\n    opacity: 0.5;\r\n}\r\n`;\r\nconst Close = styled.span`\r\n  font-size: 16px;\r\n  font-weight: 600;\r\n  color: black;\r\n  background: lightgray;\r\n  height: fit-content;\r\n  padding: 8px;\r\n  border-radius: 50%;\r\n  cursor: pointer;\r\n  opacity: 0.8;\r\n`;\r\nconst MovieInfoComponent = (props) => {\r\n    const { selectedMovie } = props;\r\n    const [movieInfo, setMovieInfo] = useState();\r\n    useEffect(() => {\r\n        axios.get(`https://www.omdbapi.com/?i=${selectedMovie}&apikey=${API_KEY}`,\r\n        ).then((response) => setMovieInfo(response.data));\r\n    }, [selectedMovie]);\r\n    return (\r\n        <Container>\r\n            {movieInfo ? (\r\n                <>\r\n                    <CoverImage src={movieInfo?.Poster}>Neha</CoverImage>\r\n                    <InfoColumn>\r\n                        <MovieName>\r\n                            {movieInfo?.Type}: {movieInfo?.Title}\r\n                        </MovieName>\r\n                        <MovieInfo>\r\n                            IMDB Rating : <span>{movieInfo?.imdbRating}</span>\r\n                        </MovieInfo>\r\n                        <MovieInfo>\r\n                            Year: <span>{movieInfo?.Year}</span>\r\n                        </MovieInfo>\r\n                        <MovieInfo>\r\n                            Language: <span>{movieInfo?.Language}</span>\r\n                        </MovieInfo>\r\n                        <MovieInfo>\r\n                            Rated: <span>{movieInfo?.Rated}</span>\r\n                        </MovieInfo>\r\n                        <MovieInfo>\r\n                            Released: <span>{movieInfo?.Released}</span>\r\n                        </MovieInfo>\r\n                        <MovieInfo>\r\n                            Runtime: <span>{movieInfo?.Runtime}</span>\r\n                        </MovieInfo>\r\n                        <MovieInfo>\r\n                            Genre: <span>{movieInfo?.Genre}</span>\r\n                        </MovieInfo>\r\n                        <MovieInfo>\r\n                            Director: <span>{movieInfo?.Director}</span>\r\n                        </MovieInfo>\r\n                        <MovieInfo>\r\n                            Actors: <span>{movieInfo?.Actors}</span>\r\n                        </MovieInfo>\r\n                        <MovieInfo>\r\n                            Plot: <span>{movieInfo?.Plot}</span>\r\n                        </MovieInfo>\r\n                    </InfoColumn>\r\n                    <Close onClick={() => props.onMovieSelect()}>X</Close>\r\n                </>\r\n            ) : (\r\n                \"Loading...\"\r\n            )}\r\n        </Container>\r\n    );\r\n};\r\n\r\nexport default MovieInfoComponent;\r\n","import styled from \"styled-components\";\nimport React, { useState } from 'react';\nimport MovieComponent from \"./components/MovieComponent\";\nimport MovieInfoComponent from \"./components/MovieInfoComponent\";\nimport axios from \"axios\";\n\n\nexport const API_KEY = \"aed46715\"\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\nconst Header = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n  align-items: centre;\n  background-color: black;\n  color: white;\n  padding: 10px;\n  font-size: 25px;\n  font-weight: bold;\n  box-shadow: 0 3px 6px 0 #555;\n`;\nconst AppName = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: centre;\n`;\nconst MovieImage = styled.img`\n  width: 48px;\n  height: 48px;\n  margin: 15px\n`;\nconst SearchBox = styled.div`\n  display: flex;\n  flex-direction: row;\n  padding: 10px 10px;\n  background-color: white;\n  border-radius: 6px;\n  margin-left: 20px;\n  \n  width: 39%;\n  height: 24px;\n\n`;\nconst MovieListContainer = styled.div`\n  display: flex;\n  flex-direction: row;\n  flex-wrap: wrap;\n  padding: 30px;\n  gap: 25px\n  justify-content: space-evenly;\n`;\nconst SearchIcon = styled.img`\n  width: 32px;\n  height: 32px;\n  margin-left: 260px;\n`;\nconst SearchInput = styled.input`\n  color: black;\n  font-size: 16px;\n  font-weight: bold;\n  border: none;\n  outline: none;\n  margin-left: 15px;\n`;\nconst Placeholder = styled.img`\n  width: 120px;\n  height: 120px;\n  margin: 150px;\n  opacity: 50%;\n`;\nfunction App() {\n  const [searchQuery, updateSearchQuery] = useState(\"\");\n  const [movieList, updateMovieList] = useState([]);\n  const [selectedMovie, onMovieSelect] = useState();\n  const [timeoutId, updateTimeoutId] = useState();\n\n  const fetchData = async (searchString) => {\n    const response = await axios.get(`https://www.omdbapi.com/?s=${searchString}&apikey=${API_KEY}`)\n    // console.log(response)\n    updateMovieList(response.data.Search)\n  };\n  const onTextChange = (event) => {\n    onMovieSelect(\"\")\n    clearTimeout(timeoutId);\n    updateSearchQuery(event.target.value);\n    const timeout = setTimeout(() => fetchData(event.target.value), 500);\n    updateTimeoutId(timeout)\n  };\n  return (\n    <Container>\n      <Header>\n        <AppName>\n          <MovieImage src=\"/movie-icon.svg\" />\n          React Movie App\n        </AppName>\n        <SearchBox>\n          <SearchInput\n            placeholder=\"Search Movie\"\n            value={searchQuery}\n            onChange={onTextChange} />\n          <SearchIcon src=\"/search-icon.svg\" />\n        </SearchBox>\n      </Header>\n      {selectedMovie && (\n        <MovieInfoComponent\n          selectedMovie={selectedMovie}\n          onMovieSelect={onMovieSelect}\n        />\n      )}\n      <MovieListContainer>\n        {movieList?.length ? (movieList.map((movie, index) => (\n          <MovieComponent\n            key={index}\n            movie={movie}\n            onMovieSelect={selectedMovie}\n          />\n        ))\n        ) : (\n          <Placeholder src=\"/movie-icon.svg\" />\n        )}\n\n      </MovieListContainer>\n\n    </Container>\n  )\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}